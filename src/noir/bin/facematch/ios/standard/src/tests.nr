use facematch::constants;
use utils::{constants::NON_SALTED_NULLIFIER, types::{DG1Data, SaltedValue}};
use utils::get_expiry_date_from_mrz;

#[test]
fn test_main() {
    let root_key = [
        // x coordinate
        0x45, 0x31, 0xe1, 0x98, 0xb5, 0xb4, 0xec, 0x04, 0xda, 0x15, 0x02, 0x04, 0x57, 0x04, 0xed,
        0x4f, 0x87, 0x72, 0x72, 0xd7, 0x61, 0x35, 0xb2, 0x61, 0x16, 0xcf, 0xc8, 0x8b, 0x61, 0x5d,
        0x0a, 0x00, 0x07, 0x19, 0xba, 0x69, 0x85, 0x8d, 0xfe, 0x77, 0xca, 0xa3, 0xb8, 0x39, 0xe0,
        0x20, 0xdd, 0xd6,
        // y coordinate
        0x56, 0x14, 0x14, 0x04, 0x70, 0x28, 0x31, 0xe4, 0x3f, 0x70, 0xb8, 0x8f, 0xd6, 0xc3, 0x94,
        0xb6, 0x08, 0xea, 0x2b, 0xd6, 0xae, 0x61, 0xe9, 0xf5, 0x98, 0xc1, 0x2f, 0x46, 0xaf, 0x52,
        0x93, 0x72, 0x66, 0xe5, 0x7f, 0x14, 0xeb, 0x61, 0xfe, 0xc5, 0x30, 0xf7, 0x14, 0x4f, 0x53,
        0x81, 0x2e, 0x35,
    ];
    let intermediate_key = [
        // x coordinate
        0xae, 0x5b, 0x37, 0xa0, 0x77, 0x4d, 0x79, 0xb2, 0x35, 0x8f, 0x40, 0xe7, 0xd1, 0xf2, 0x26,
        0x26, 0xf1, 0xc2, 0x5f, 0xef, 0x17, 0x80, 0x2d, 0xea, 0xb3, 0x82, 0x6a, 0x59, 0x87, 0x4f,
        0xf8, 0xd2, 0xad, 0x15, 0x25, 0x78, 0x9a, 0xa2, 0x66, 0x04, 0x19, 0x12, 0x48, 0xb6, 0x3c,
        0xb9, 0x67, 0x06,
        // y coordinate
        0x9e, 0x98, 0xd3, 0x63, 0xbd, 0x5e, 0x37, 0x0f, 0xbf, 0xa0, 0x8e, 0x32, 0x9e, 0x80, 0x73,
        0xa9, 0x85, 0xe7, 0x74, 0x6e, 0xa3, 0x59, 0xa2, 0xf6, 0x6f, 0x29, 0xdb, 0x32, 0xaf, 0x45,
        0x5e, 0x21, 0x16, 0x58, 0xd5, 0x67, 0xaf, 0x9e, 0x26, 0x7e, 0xb2, 0x61, 0x4d, 0xc2, 0x1a,
        0x66, 0xce, 0x99,
    ];
    let intermediate_sig = [
        0xbb, 0xbe, 0x88, 0x8d, 0x73, 0x8d, 0x05, 0x02, 0xcf, 0xbc, 0xfd, 0x66, 0x6d, 0x09, 0x57,
        0x50, 0x35, 0xbc, 0xd6, 0x87, 0x2c, 0x3f, 0x84, 0x30, 0x49, 0x26, 0x29, 0xed, 0xd1, 0xf9,
        0x14, 0xe8, 0x79, 0x99, 0x1c, 0x9a, 0xe8, 0xb5, 0xae, 0xf8, 0xd3, 0xa8, 0x54, 0x33, 0xf7,
        0xb6, 0x0d, 0x06, 0x54, 0xc7, 0x12, 0x2f, 0x33, 0x7e, 0x12, 0xff, 0x5b, 0xad, 0x3c, 0x45,
        0xbb, 0x06, 0x6c, 0x9c, 0x9a, 0xac, 0x01, 0x33, 0xd6, 0x80, 0xd1, 0x4a, 0xe7, 0xc3, 0xee,
        0xc3, 0x99, 0xec, 0x63, 0x28, 0xbe, 0xbd, 0xc2, 0x30, 0x3a, 0xb7, 0xa3, 0x42, 0x7d, 0x74,
        0x11, 0xaf, 0x74, 0x30, 0xef, 0xbc,
    ];
    let intermediate_tbs: [u8; 500] = [
        0x30, 0x82, 0x01, 0xc8, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10, 0x09, 0xba, 0xc5, 0xe1,
        0xbc, 0x40, 0x1a, 0xd9, 0xd4, 0x53, 0x95, 0xbc, 0x38, 0x1a, 0x08, 0x54, 0x30, 0x0a, 0x06,
        0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x03, 0x30, 0x52, 0x31, 0x26, 0x30, 0x24,
        0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x41, 0x70,
        0x70, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x52,
        0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0a,
        0x0c, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x13, 0x30,
        0x11, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0a, 0x43, 0x61, 0x6c, 0x69, 0x66, 0x6f, 0x72,
        0x6e, 0x69, 0x61, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x30, 0x30, 0x33, 0x31, 0x38, 0x31, 0x38,
        0x33, 0x39, 0x35, 0x35, 0x5a, 0x17, 0x0d, 0x33, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x30,
        0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x4f, 0x31, 0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04,
        0x03, 0x0c, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x41, 0x70, 0x70, 0x20, 0x41, 0x74,
        0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x41, 0x20, 0x31, 0x31,
        0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65,
        0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c,
        0x0a, 0x43, 0x61, 0x6c, 0x69, 0x66, 0x6f, 0x72, 0x6e, 0x69, 0x61, 0x30, 0x76, 0x30, 0x10,
        0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00,
        0x22, 0x03, 0x62, 0x00, 0x04, 0xae, 0x5b, 0x37, 0xa0, 0x77, 0x4d, 0x79, 0xb2, 0x35, 0x8f,
        0x40, 0xe7, 0xd1, 0xf2, 0x26, 0x26, 0xf1, 0xc2, 0x5f, 0xef, 0x17, 0x80, 0x2d, 0xea, 0xb3,
        0x82, 0x6a, 0x59, 0x87, 0x4f, 0xf8, 0xd2, 0xad, 0x15, 0x25, 0x78, 0x9a, 0xa2, 0x66, 0x04,
        0x19, 0x12, 0x48, 0xb6, 0x3c, 0xb9, 0x67, 0x06, 0x9e, 0x98, 0xd3, 0x63, 0xbd, 0x5e, 0x37,
        0x0f, 0xbf, 0xa0, 0x8e, 0x32, 0x9e, 0x80, 0x73, 0xa9, 0x85, 0xe7, 0x74, 0x6e, 0xa3, 0x59,
        0xa2, 0xf6, 0x6f, 0x29, 0xdb, 0x32, 0xaf, 0x45, 0x5e, 0x21, 0x16, 0x58, 0xd5, 0x67, 0xaf,
        0x9e, 0x26, 0x7e, 0xb2, 0x61, 0x4d, 0xc2, 0x1a, 0x66, 0xce, 0x99, 0xa3, 0x66, 0x30, 0x64,
        0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01,
        0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30,
        0x16, 0x80, 0x14, 0xac, 0x91, 0x10, 0x53, 0x33, 0xbd, 0xbe, 0x68, 0x41, 0xff, 0xa7, 0x0c,
        0xa9, 0xe5, 0xfa, 0xea, 0xe5, 0xe5, 0x8a, 0xa1, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e,
        0x04, 0x16, 0x04, 0x14, 0x3e, 0xe3, 0x5d, 0x1c, 0x04, 0x19, 0xa9, 0xc9, 0xb4, 0x31, 0xf8,
        0x84, 0x74, 0xd6, 0xe1, 0xe1, 0x57, 0x72, 0xe3, 0x9b, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d,
        0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00,
    ];
    let credential_sig = [
        0xbc, 0x46, 0x6e, 0xf8, 0xc9, 0x94, 0xf2, 0xe2, 0x0b, 0x92, 0x03, 0xe1, 0xa9, 0x62, 0xe8,
        0x48, 0x02, 0x56, 0x31, 0xf9, 0xa7, 0xe3, 0x33, 0xe6, 0x42, 0x9b, 0x11, 0x4a, 0x98, 0xe3,
        0xd0, 0xd6, 0xf1, 0xbc, 0xa7, 0x12, 0x50, 0xec, 0xff, 0xc9, 0x12, 0xc8, 0xa2, 0x69, 0x18,
        0xab, 0xa4, 0x9a, 0x7e, 0xd6, 0xd3, 0x2e, 0xb3, 0x71, 0x52, 0x4d, 0xc2, 0x5c, 0x26, 0xcf,
        0x4c, 0x60, 0x86, 0x15, 0xdb, 0xb7, 0x55, 0x0a, 0xcb, 0x82, 0xc4, 0x72, 0xcc, 0xf3, 0x53,
        0x34, 0x96, 0x1e, 0xf1, 0xe7, 0xfe, 0xc2, 0x90, 0xa0, 0x9c, 0x61, 0xde, 0xa3, 0xfd, 0xfc,
        0x7e, 0x10, 0xfa, 0xe9, 0xc1, 0x0b,
    ];
    let credential_tbs: [u8; 1000] = [
        0x30, 0x82, 0x03, 0x50, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x06, 0x01, 0x98, 0xea, 0xe2,
        0xdd, 0x59, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
        0x4f, 0x31, 0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x41, 0x70, 0x70,
        0x6c, 0x65, 0x20, 0x41, 0x70, 0x70, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
        0x69, 0x6f, 0x6e, 0x20, 0x43, 0x41, 0x20, 0x31, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55,
        0x04, 0x0a, 0x0c, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31,
        0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0a, 0x43, 0x61, 0x6c, 0x69, 0x66,
        0x6f, 0x72, 0x6e, 0x69, 0x61, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x35, 0x30, 0x38, 0x32, 0x36,
        0x30, 0x39, 0x33, 0x36, 0x33, 0x33, 0x5a, 0x17, 0x0d, 0x32, 0x36, 0x30, 0x35, 0x32, 0x34,
        0x32, 0x30, 0x33, 0x32, 0x33, 0x33, 0x5a, 0x30, 0x81, 0x91, 0x31, 0x49, 0x30, 0x47, 0x06,
        0x03, 0x55, 0x04, 0x03, 0x0c, 0x40, 0x37, 0x62, 0x36, 0x31, 0x36, 0x32, 0x30, 0x66, 0x37,
        0x64, 0x33, 0x63, 0x64, 0x33, 0x31, 0x32, 0x63, 0x38, 0x34, 0x66, 0x61, 0x64, 0x31, 0x64,
        0x31, 0x39, 0x66, 0x35, 0x39, 0x64, 0x61, 0x36, 0x32, 0x38, 0x33, 0x36, 0x34, 0x38, 0x65,
        0x37, 0x66, 0x39, 0x38, 0x38, 0x64, 0x65, 0x66, 0x38, 0x34, 0x39, 0x34, 0x34, 0x37, 0x63,
        0x35, 0x31, 0x35, 0x39, 0x37, 0x37, 0x37, 0x61, 0x36, 0x64, 0x31, 0x1a, 0x30, 0x18, 0x06,
        0x03, 0x55, 0x04, 0x0b, 0x0c, 0x11, 0x41, 0x41, 0x41, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69,
        0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55,
        0x04, 0x0a, 0x0c, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31,
        0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0a, 0x43, 0x61, 0x6c, 0x69, 0x66,
        0x6f, 0x72, 0x6e, 0x69, 0x61, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce,
        0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,
        0x00, 0x04, 0xc5, 0xad, 0xb3, 0x52, 0x0b, 0x9c, 0xbf, 0xca, 0x42, 0xa8, 0x36, 0x87, 0xec,
        0xb5, 0x9f, 0xf5, 0x2c, 0x0b, 0xce, 0xf2, 0x42, 0x3d, 0xf2, 0x09, 0x7f, 0x72, 0xe0, 0xce,
        0x65, 0x27, 0x8c, 0xb8, 0x6c, 0xf4, 0x4a, 0xa8, 0xcf, 0x0d, 0xe4, 0xa2, 0xb5, 0x78, 0xbe,
        0xdb, 0xbf, 0xf0, 0x61, 0x2d, 0x80, 0x2f, 0x30, 0xc9, 0xf4, 0xfc, 0x71, 0x10, 0x9b, 0x2b,
        0x40, 0x9d, 0x43, 0x14, 0x0f, 0xca, 0xa3, 0x82, 0x01, 0xd3, 0x30, 0x82, 0x01, 0xcf, 0x30,
        0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e,
        0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x04, 0xf0, 0x30,
        0x81, 0x9f, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x63, 0x64, 0x08, 0x05, 0x04, 0x81,
        0x91, 0x30, 0x81, 0x8e, 0xa4, 0x03, 0x02, 0x01, 0x0a, 0xbf, 0x89, 0x30, 0x03, 0x02, 0x01,
        0x01, 0xbf, 0x89, 0x31, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x89, 0x32, 0x03, 0x02, 0x01, 0x01,
        0xbf, 0x89, 0x33, 0x03, 0x02, 0x01, 0x01, 0xbf, 0x89, 0x34, 0x2f, 0x04, 0x2d, 0x59, 0x4c,
        0x35, 0x4d, 0x53, 0x33, 0x5a, 0x36, 0x33, 0x39, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x7a, 0x6b,
        0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x61, 0x74, 0x74,
        0x65, 0x73, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0xa5, 0x06,
        0x04, 0x04, 0x73, 0x6b, 0x73, 0x20, 0xbf, 0x89, 0x36, 0x03, 0x02, 0x01, 0x05, 0xbf, 0x89,
        0x37, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x89, 0x39, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x89, 0x3a,
        0x03, 0x02, 0x01, 0x00, 0xbf, 0x89, 0x3b, 0x03, 0x02, 0x01, 0x00, 0xaa, 0x03, 0x02, 0x01,
        0x00, 0xbf, 0x89, 0x3c, 0x06, 0x02, 0x04, 0x73, 0x6b, 0x73, 0x20, 0x30, 0x81, 0xd7, 0x06,
        0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x63, 0x64, 0x08, 0x07, 0x04, 0x81, 0xc9, 0x30, 0x81,
        0xc6, 0xbf, 0x8a, 0x78, 0x08, 0x04, 0x06, 0x31, 0x38, 0x2e, 0x36, 0x2e, 0x32, 0xbf, 0x88,
        0x50, 0x03, 0x02, 0x01, 0x02, 0xbf, 0x8a, 0x79, 0x09, 0x04, 0x07, 0x31, 0x2e, 0x30, 0x2e,
        0x31, 0x39, 0x38, 0xbf, 0x8a, 0x7b, 0x08, 0x04, 0x06, 0x32, 0x32, 0x47, 0x31, 0x30, 0x30,
        0xbf, 0x8a, 0x7c, 0x08, 0x04, 0x06, 0x31, 0x38, 0x2e, 0x36, 0x2e, 0x32, 0xbf, 0x8a, 0x7d,
        0x08, 0x04, 0x06, 0x31, 0x38, 0x2e, 0x36, 0x2e, 0x32, 0xbf, 0x8a, 0x7e, 0x03, 0x02, 0x01,
        0x00, 0xbf, 0x8a, 0x7f, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x8b, 0x00, 0x03, 0x02, 0x01, 0x00,
        0xbf, 0x8b, 0x01, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x8b, 0x02, 0x03, 0x02, 0x01, 0x00, 0xbf,
        0x8b, 0x03, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x8b, 0x04, 0x03, 0x02, 0x01, 0x01, 0xbf, 0x8b,
        0x05, 0x03, 0x02, 0x01, 0x00, 0xbf, 0x8b, 0x0a, 0x10, 0x04, 0x0e, 0x32, 0x32, 0x2e, 0x37,
        0x2e, 0x31, 0x30, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2c, 0x30, 0xbf, 0x8b, 0x0b, 0x10, 0x04,
        0x0e, 0x32, 0x32, 0x2e, 0x37, 0x2e, 0x31, 0x30, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2c, 0x30,
        0xbf, 0x8b, 0x0c, 0x10, 0x04, 0x0e, 0x32, 0x32, 0x2e, 0x37, 0x2e, 0x31, 0x30, 0x30, 0x2e,
        0x30, 0x2e, 0x30, 0x2c, 0x30, 0xbf, 0x88, 0x02, 0x0a, 0x04, 0x08, 0x69, 0x70, 0x68, 0x6f,
        0x6e, 0x65, 0x6f, 0x73, 0x30, 0x33, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x63, 0x64,
        0x08, 0x02, 0x04, 0x26, 0x30, 0x24, 0xa1, 0x22, 0x04, 0x20, 0x5d, 0xd1, 0xdd, 0x63, 0xda,
        0x05, 0xa2, 0x33, 0xe7, 0x87, 0x3a, 0xd0, 0x96, 0x89, 0x95, 0x8a, 0xe8, 0x95, 0x7a, 0x63,
        0x31, 0x17, 0x5e, 0x5e, 0xdc, 0xb0, 0x7b, 0x96, 0xc0, 0xb6, 0xe7, 0xcf, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ];
    let auth_data: [u8; 180] = [
        0x88, 0xa4, 0xf2, 0x4d, 0x24, 0x0d, 0xa6, 0x75, 0x3f, 0x7c, 0x61, 0xf0, 0xb3, 0xa1, 0x45,
        0xa0, 0xc3, 0xc3, 0xac, 0x06, 0xb2, 0x9a, 0x23, 0x5f, 0xe4, 0xa7, 0xb0, 0xee, 0x0d, 0x25,
        0x31, 0x87, 0x40, 0x00, 0x00, 0x00, 0x00, 0x61, 0x70, 0x70, 0x61, 0x74, 0x74, 0x65, 0x73,
        0x74, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x00, 0x20, 0x7b, 0x61, 0x62, 0x0f, 0x7d,
        0x3c, 0xd3, 0x12, 0xc8, 0x4f, 0xad, 0x1d, 0x19, 0xf5, 0x9d, 0xa6, 0x28, 0x36, 0x48, 0xe7,
        0xf9, 0x88, 0xde, 0xf8, 0x49, 0x44, 0x7c, 0x51, 0x59, 0x77, 0x7a, 0x6d, 0xa5, 0x01, 0x02,
        0x03, 0x26, 0x20, 0x01, 0x21, 0x58, 0x20, 0xc5, 0xad, 0xb3, 0x52, 0x0b, 0x9c, 0xbf, 0xca,
        0x42, 0xa8, 0x36, 0x87, 0xec, 0xb5, 0x9f, 0xf5, 0x2c, 0x0b, 0xce, 0xf2, 0x42, 0x3d, 0xf2,
        0x09, 0x7f, 0x72, 0xe0, 0xce, 0x65, 0x27, 0x8c, 0xb8, 0x22, 0x58, 0x20, 0x6c, 0xf4, 0x4a,
        0xa8, 0xcf, 0x0d, 0xe4, 0xa2, 0xb5, 0x78, 0xbe, 0xdb, 0xbf, 0xf0, 0x61, 0x2d, 0x80, 0x2f,
        0x30, 0xc9, 0xf4, 0xfc, 0x71, 0x10, 0x9b, 0x2b, 0x40, 0x9d, 0x43, 0x14, 0x0f, 0xca, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ];
    let client_data: [u8; 169] = [
        0x30, 0x81, 0x97, 0x02, 0x01, 0x01, 0x0c, 0x05, 0x31, 0x2e, 0x32, 0x2e, 0x33, 0x0a, 0x01,
        0x01, 0xa1, 0x81, 0x87, 0x30, 0x81, 0x84, 0x0a, 0x01, 0x01, 0x30, 0x2f, 0x30, 0x0b, 0x06,
        0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x04, 0x20, 0x11, 0x11, 0x11,
        0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
        0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x02,
        0x04, 0x05, 0x39, 0x7f, 0xb1, 0x02, 0x04, 0x04, 0x2c, 0x1d, 0x80, 0x04, 0x20, 0xe6, 0xdb,
        0x65, 0xc2, 0xa7, 0xc8, 0x2f, 0x2a, 0xe6, 0x2c, 0xd5, 0x5e, 0x36, 0xab, 0x78, 0x08, 0x9f,
        0xf9, 0x0b, 0x2f, 0x71, 0x85, 0xd5, 0x8d, 0x9e, 0x12, 0xe7, 0x5b, 0x74, 0x54, 0x3b, 0xe9,
        0x04, 0x20, 0x2a, 0x3c, 0x2e, 0x74, 0x6f, 0xeb, 0x93, 0x3a, 0x34, 0x6b, 0xc4, 0xee, 0x74,
        0x98, 0x30, 0x52, 0x4d, 0x4a, 0xe5, 0xe9, 0x52, 0xef, 0x6a, 0x5d, 0x0a, 0x78, 0xf0, 0xfe,
        0x28, 0x30, 0x0a, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
    ];
    let facematch_mode = constants::FACEMATCH_MODE_REGULAR;
    let environment = constants::APP_ATTEST_ENV_DEVELOPMENT;
    // Our Apple app ID: YL5MS3Z639.app.zkpassport.appattest-prototype (format is <team_id>.<bundle_id>)
    let app_id: [u8; constants::APP_ID_MAX_LEN] = [
        0x59, 0x4c, 0x35, 0x4d, 0x53, 0x33, 0x5a, 0x36, 0x33, 0x39, 0x2e, 0x61, 0x70, 0x70, 0x2e,
        0x7a, 0x6b, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x61, 0x70, 0x70, 0x61,
        0x74, 0x74, 0x65, 0x73, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ];

    let comm_in: Field = 0x0bf560897d80eaf0022f04e7f72bc86fe68c8985eedd2b0edf3b016d10d3e0be;
    let salt: Field = 0x03;
    let private_nullifier: Field =
        0x1be38799f1a15b187efcc4054f77363511b4ddbeffbf1923c49205a5e069f832;
    let dg1: DG1Data = [
        97, 91, 95, 31, 88, 80, 60, 65, 85, 83, 83, 73, 76, 86, 69, 82, 72, 65, 78, 68, 60, 60, 74,
        79, 72, 78, 78, 89, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
        60, 60, 60, 80, 65, 49, 50, 51, 52, 53, 54, 55, 95, 65, 85, 83, 56, 56, 49, 49, 49, 50, 95,
        77, 51, 48, 48, 49, 48, 49, 95, 60, 67, 89, 66, 69, 82, 67, 73, 84, 89, 60, 60, 60, 60, 60,
        60, 0, 0,
    ];
    let dg2_hash_normalized: Field =
        8139486222726709210806292423714198544183801150553145112531036039570737767943;
    let dg2_hash_type: u32 = 3;
    let service_scope: Field = 0;
    let service_subscope: Field = 0;
    let nullifier_secret: Field = 0;
    let current_date: u64 = 1719859200;
    let (param_commitment, nullifier_type, nullifier) = crate::main(
        comm_in,
        current_date,
        SaltedValue::from_value(salt, private_nullifier),
        SaltedValue::from_value(salt, get_expiry_date_from_mrz(dg1)),
        SaltedValue::from_value(salt, dg1),
        SaltedValue::from_value(salt, dg2_hash_normalized),
        SaltedValue::from_value(salt, dg2_hash_type),
        root_key,
        intermediate_key,
        intermediate_tbs,
        intermediate_sig,
        credential_tbs,
        credential_sig,
        auth_data,
        client_data,
        environment,
        app_id,
        facematch_mode,
        nullifier_secret,
        service_scope,
        service_subscope,
    );
    assert(param_commitment == 0x266eb913de2cc236d98c76a85efadf07814833a21d62de95a79e9c625fcb32ea);
    assert(nullifier == 0x23e6d64d15c131d84badbfdbd06bf9c4b8794c5541737c9fcb884ee18f78b81c);
    assert(nullifier_type == NON_SALTED_NULLIFIER);
}
